//
// _button
//
// Default button styles
// ********************************************************************************************************************************


// Variables
// *************************************
$button-hp: 14px !default; // Left/Right paddings
$button-vp: 40px !default; // Top/Bottom paddings



// Base
// *************************************
.#{$namespace}button {
	position: relative;
	display:inline-flex;
	height:50px;
	padding:0 30px;
	align-items:center;
	justify-content:center;
	text-align:center;
	color: map-get($ui-colors, primary-medium);
	border:0;
	font-size:14px;
	font-weight:500;
	background-color:map-get($ui-colors, primary-light);

	@include do-fx(
		background-color 0.25s linear
	);
	&:hover {
		background-color:map-get($ui-colors, primary);
		color:#fff;
	}

	&-uppercase {
		text-transform:uppercase;
	}

	&-secondary {
		color:#fff;
		background-color:map-get($ui-colors, secondary-dark);
		&:hover {
			background-color:map-get($ui-colors, black);
			color:#fff;
		}
	}
}

a.#{$namespace}button {
	text-decoration: none;
}



// Functions
// *************************************
// Button full : Full width buttons
.#{$namespace}button-full {
	display:flex;
	width: 100%;
	background-color: #2e3668;
	color: #FFF;
}

.#{$namespace}button-full-2 {
	display:flex;
	width: 100%;
	color: #FFF;
}

// Other
// *************************************
.#{$namespace}button-group {
	> .#{$namespace}button {
		float: left;
	}
	@extend %clearfix;
}


// Make button full from X breakpoints
@mixin do-button-full($breakpoints: $grid-breakpoints) {
	@each $breakpoint in map-keys($breakpoints) {
		@include media-breakpoint-up($breakpoint) {
			.#{$namespace}button-full-#{$breakpoint} {width:100%;}
		}
	}
}
@include do-button-full();



